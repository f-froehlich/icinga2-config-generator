/*
 *Icinga2 configuration generator
 *
 *Icinga2 configuration file generator for hosts, commands, checks, ... in python
 *
 *Copyright (c) 2020 Fabian Fröhlich <mail@icinga2.confgen.org> https://icinga2.confgen.org
 *
 *
 *This program is free software: you can redistribute it and/or modify
 *it under the terms of the GNU Affero General Public License as
 *published by the Free Software Foundation, either version 3 of the
 *License, or (at your option) any later version.
 *
 *This program is distributed in the hope that it will be useful,
 *but WITHOUT ANY WARRANTY; without even the implied warranty of
 *MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the
 *GNU Affero General Public License for more details.
 *
 *You should have received a copy of the GNU Affero General Public License
 *along with this program.If not, see <https://www.gnu.org/licenses/>.
 *
 *For all license terms see README.md and LICENSE Files in root directory of this Project.
 */



/************************************************************************************************
 **
 *! ! ! *
 * IMPORTANT NOTICE *
 *! ! ! *
 **
 **
 *DO NOT EDIT THIS FILE!*
 * This file is automatically generated with icinga2confgen python library. *
 **
 **
 * Copyright (c) 2020 Fabian Fröhlich <mail@icinga2.confgen.org>*
 * https://icinga2.confgen.org*
 **
 ************************************************************************************************/



object UserGroup "usergroup_BaseTestUserGroup" {
display_name = "BaseTestUserGroup"
assign where "usergroup_BaseTestUserGroup" in user.vars.groups
}
object User "user_group_notification_sender_BaseTestUserGroup" {
display_name = "Notification sender of group BaseTestUserGroup"
vars.email_addresses += [
"group1@mail1",
"group1@mail2",
]
}
object User "user_BaseTestUser" {
vars.email_addresses += [
"user1@mail1",
"user1@mail2",
]
states += [
"OK",
"Warning",
"Critical",
"Unknown",
"Down",
]
types += [
"Problem",
"Acknowledgement",
"Recovery",
"Custom",
"FlappingStart",
"FlappingEnd",
"DowntimeStart",
"DowntimeEnd",
"DowntimeRemoved",
]
}
template Notification "notification_template_host_instance" {
interval = 1h
command = "command_host_aws_ses"
types += [
"DowntimeStart",
"DowntimeEnd",
"DowntimeRemoved",
"Custom",
"Acknowledgement",
"Problem",
"Recovery",
"FlappingStart",
"FlappingEnd",
]
states += [
"Up",
"Down",
]
}
template Notification "notification_template_service_instance" {
interval = 1h
command = "command_service_aws_ses"
types += [
"DowntimeStart",
"DowntimeEnd",
"DowntimeRemoved",
"Custom",
"Acknowledgement",
"Problem",
"Recovery",
"FlappingStart",
"FlappingEnd",
]
states += [
"OK",
]
}
apply Notification "host_notification_instance_user_BaseTestUser_0" to Host {
import "notification_template_host_instance"
users += [
"user_BaseTestUser",
]
vars.notification_aws_ses_recipients += [
"user1@mail1",
"user1@mail2",
]

vars.notification_aws_ses_key_id = "KEY_ID"

vars.notification_aws_ses_secret = "SECRET"

vars.notification_aws_ses_sender = "SENDER"





assign where "notification_instance" in host.vars.notification
}
apply Notification "service_notification_instance_user_BaseTestUser_0" to Service {
import "notification_template_service_instance"
users += [
"user_BaseTestUser",
]
vars.notification_aws_ses_recipients += [
"user1@mail1",
"user1@mail2",
]

vars.notification_aws_ses_key_id = "KEY_ID"

vars.notification_aws_ses_secret = "SECRET"

vars.notification_aws_ses_sender = "SENDER"





assign where "notification_instance" in service.vars.notification
}
apply Notification "host_notification_instance_group_BaseTestUserGroup_0" to Host {
import "notification_template_host_instance"
users += [
"user_group_notification_sender_BaseTestUserGroup",
]
vars.notification_aws_ses_recipients += [
"group1@mail1",
"group1@mail2",
]

vars.notification_aws_ses_key_id = "KEY_ID"

vars.notification_aws_ses_secret = "SECRET"

vars.notification_aws_ses_sender = "SENDER"





assign where "notification_instance" in host.vars.notification
}
apply Notification "service_notification_instance_group_BaseTestUserGroup_0" to Service {
import "notification_template_service_instance"
users += [
"user_group_notification_sender_BaseTestUserGroup",
]
vars.notification_aws_ses_recipients += [
"group1@mail1",
"group1@mail2",
]

vars.notification_aws_ses_key_id = "KEY_ID"

vars.notification_aws_ses_secret = "SECRET"

vars.notification_aws_ses_sender = "SENDER"





assign where "notification_instance" in service.vars.notification
}
object NotificationCommand "command_host_aws_ses" {
command = [ "$monitoring_script_dir$/aws_ses_notification_host.py"]
arguments = {

"-l" = {
value = "$host.name$"
required = true
}
"-n" = {
value = "$host.display_name$"
required = true
}
"-D" = {
value = "$icinga.long_date_time$"
required = true
}
"-4" = {
value = "$address$"
set_if = {{ macro("$address$") != false }}
}
"-6" = {
value = "$address6$"
set_if = {{ macro("$address6$") != false }}
}
"-b" = {
value = "$notification.author$"
set_if = {{ macro("$notification.author$") != false }}
}
"-c" = {
value = "$notification.comment$"
set_if = {{ macro("$notification.comment$") != false }}
}
"-i" = {
value = "$notification_icingaweb2url$"
set_if = {{ macro("$notification_icingaweb2url$") != false }}
}
"-f" = {
value = "$notification_from$"
set_if = {{ macro("$notification_from$") != false }}
}
"-t" = {
value = "$notification.type$"
required = true
}
"-v" = {
set_if = "$notification_logtosyslog$"
}

"-o" = {
value = "$host.output$"
required = true
}
"-s" = {
value = "$host.state$"
required = true
}

"-k" = {
value = "$notification_aws_ses_key_id$"
required = true
}
"-S" = {
value = "$notification_aws_ses_secret$"
required = true
}
"-F" = {
value = "$notification_aws_ses_sender$"
required = true
}
"-R" = {
value = "$notification_aws_ses_region$"
set_if = {{ macro("$notification_aws_ses_region$") != false }}
} 
"--subject" = {
value = "$notification_aws_ses_subject_template$"
set_if = {{ macro("$notification_aws_ses_subject_template$") != false }}
} 
"--message-template-short" = {
value = "$notification_aws_ses_message_template_short$"
set_if = {{ macro("$notification_aws_ses_message_template_short$") != false }}
} 
"--message-template-additional" = {
value = "$notification_aws_ses_message_template_additional$"
set_if = {{ macro("$notification_aws_ses_message_template_additional$") != false }}
} 
"-r" = {
value = "$notification_aws_ses_recipients$"
set_if = {{ macro("$notification_aws_ses_recipients$") != false }}
repeat_key = true
}
}

}
object NotificationCommand "command_service_aws_ses" {
command = [ "$monitoring_script_dir$/aws_ses_notification_service.py"]
arguments = {

"-l" = {
value = "$host.name$"
required = true
}
"-n" = {
value = "$host.display_name$"
required = true
}
"-D" = {
value = "$icinga.long_date_time$"
required = true
}
"-4" = {
value = "$address$"
set_if = {{ macro("$address$") != false }}
}
"-6" = {
value = "$address6$"
set_if = {{ macro("$address6$") != false }}
}
"-b" = {
value = "$notification.author$"
set_if = {{ macro("$notification.author$") != false }}
}
"-c" = {
value = "$notification.comment$"
set_if = {{ macro("$notification.comment$") != false }}
}
"-i" = {
value = "$notification_icingaweb2url$"
set_if = {{ macro("$notification_icingaweb2url$") != false }}
}
"-f" = {
value = "$notification_from$"
set_if = {{ macro("$notification_from$") != false }}
}
"-t" = {
value = "$notification.type$"
required = true
}
"-v" = {
set_if = "$notification_logtosyslog$"
}

"-o" = {
value = "$service.output$"
required = true
}
"-a" = {
value = "$service.state$"
required = true
}
"-e" = {
value = "$service.name$"
required = true
}
"-E" = {
value = "$service.display_name$"
required = true
}

"-k" = {
value = "$notification_aws_ses_key_id$"
required = true
}
"-S" = {
value = "$notification_aws_ses_secret$"
required = true
}
"-F" = {
value = "$notification_aws_ses_sender$"
required = true
}
"-R" = {
value = "$notification_aws_ses_region$"
set_if = {{ macro("$notification_aws_ses_region$") != false }}
} 
"--subject" = {
value = "$notification_aws_ses_subject_template$"
set_if = {{ macro("$notification_aws_ses_subject_template$") != false }}
} 
"--message-template-short" = {
value = "$notification_aws_ses_message_template_short$"
set_if = {{ macro("$notification_aws_ses_message_template_short$") != false }}
} 
"--message-template-additional" = {
value = "$notification_aws_ses_message_template_additional$"
set_if = {{ macro("$notification_aws_ses_message_template_additional$") != false }}
} 
"-r" = {
value = "$notification_aws_ses_recipients$"
set_if = {{ macro("$notification_aws_ses_recipients$") != false }}
repeat_key = true
}
}

}
/*
 *Icinga2 configuration generator
 *
 *Icinga2 configuration file generator for hosts, commands, checks, ... in python
 *
 *Copyright (c) 2020 Fabian Fröhlich <mail@icinga2.confgen.org> https://icinga2.confgen.org
 *
 *
 *This program is free software: you can redistribute it and/or modify
 *it under the terms of the GNU Affero General Public License as
 *published by the Free Software Foundation, either version 3 of the
 *License, or (at your option) any later version.
 *
 *This program is distributed in the hope that it will be useful,
 *but WITHOUT ANY WARRANTY; without even the implied warranty of
 *MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the
 *GNU Affero General Public License for more details.
 *
 *You should have received a copy of the GNU Affero General Public License
 *along with this program.If not, see <https://www.gnu.org/licenses/>.
 *
 *For all license terms see README.md and LICENSE Files in root directory of this Project.
 */



/************************************************************************************************
 **
 *! ! ! *
 * IMPORTANT NOTICE *
 *! ! ! *
 **
 **
 *DO NOT EDIT THIS FILE!*
 * This file is automatically generated with icinga2confgen python library. *
 **
 **
 * Copyright (c) 2020 Fabian Fröhlich <mail@icinga2.confgen.org>*
 * https://icinga2.confgen.org*
 **
 ************************************************************************************************/



/*



/************************************************************************************************
 **
 *! ! ! *
 * IMPORTANT NOTICE *
 *! ! ! *
 **
 **
 *THIS IS A LEGACY FILE!*
 * The usage of legacy files are only allowed for migration purposes and*
 *configurations for your own closed-source applications, as long as*
 * there is no interest from third parties for the configuration or *
 * underlining checks. If the check itself is open-source or there is an*
 * interest of third parties, then you have to publish the check command*
 * and check configuration file as python code in this repository.*
 **
 **
 * Copyright (c) 2020 Fabian Fröhlich <mail@icinga2.confgen.org>*
 * https://icinga2.confgen.org*
 **
 ************************************************************************************************/




// This is an example file, which ist placed in foo zone
// This is an example file, which ist placed in master zone
// This is an example file, which ist placed in global-templates zone