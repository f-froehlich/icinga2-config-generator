/*
 *Icinga2 configuration generator
 *
 *Icinga2 configuration file generator for hosts, commands, checks, ... in python
 *
 *Copyright (c) 2020 Fabian Fröhlich <mail@icinga2.confgen.org> https://icinga2.confgen.org
 *
 *
 *This program is free software: you can redistribute it and/or modify
 *it under the terms of the GNU Affero General Public License as
 *published by the Free Software Foundation, either version 3 of the
 *License, or (at your option) any later version.
 *
 *This program is distributed in the hope that it will be useful,
 *but WITHOUT ANY WARRANTY; without even the implied warranty of
 *MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the
 *GNU Affero General Public License for more details.
 *
 *You should have received a copy of the GNU Affero General Public License
 *along with this program.If not, see <https://www.gnu.org/licenses/>.
 *
 *For all license terms see README.md and LICENSE Files in root directory of this Project.
 */



/************************************************************************************************
 **
 *! ! ! *
 * IMPORTANT NOTICE *
 *! ! ! *
 **
 **
 *DO NOT EDIT THIS FILE!*
 * This file is automatically generated with icinga2confgen python library. *
 **
 **
 * Copyright (c) 2020 Fabian Fröhlich <mail@icinga2.confgen.org>*
 * https://icinga2.confgen.org*
 **
 ************************************************************************************************/



object CheckCommand "command_instance_local" {
command = [ "$monitoring_plugin_dir$" + "/snmp/Synology/check_space_io.py"]
arguments = {
"-u" = {
value = "$command_snmp_username$"
set_if = {{ macro("$command_snmp_username$") != false }}
}
"-p" = {
value = "$command_snmp_password$"
set_if = {{ macro("$command_snmp_password$") != false }}
}
"-H" = {
value = "$command_snmp_host$"
required = true
}
"--timeout" = {
value = "$command_snmp_timeout$"
set_if = {{ macro("$command_snmp_timeout$") != false }}
}
"--version" = {
value = "$command_snmp_version$"
set_if = {{ macro("$command_snmp_version$") != false }}
}
"--community" = {
value = "$command_snmp_community$"
set_if = {{ macro("$command_snmp_community$") != false }}
}

"-v" = {
value = "$command_space_io_volume$"
required = true
}
"-w" = {
value = "$command_space_io_warning$"
set_if = {{ macro("$command_space_io_warning$") != false }}
}
"-c" = {
value = "$command_space_io_critical$"
set_if = {{ macro("$command_space_io_critical$") != false }}
}

}

}
object CheckCommand "command_instance_local_negate" {
vars.realcmd = [ "$monitoring_plugin_dir$" + "/snmp/Synology/check_space_io.py"]
vars.realargs = {
"-u" = {
value = "$command_snmp_username$"
set_if = {{ macro("$command_snmp_username$") != false }}
}
"-p" = {
value = "$command_snmp_password$"
set_if = {{ macro("$command_snmp_password$") != false }}
}
"-H" = {
value = "$command_snmp_host$"
required = true
}
"--timeout" = {
value = "$command_snmp_timeout$"
set_if = {{ macro("$command_snmp_timeout$") != false }}
}
"--version" = {
value = "$command_snmp_version$"
set_if = {{ macro("$command_snmp_version$") != false }}
}
"--community" = {
value = "$command_snmp_community$"
set_if = {{ macro("$command_snmp_community$") != false }}
}

"-v" = {
value = "$command_space_io_volume$"
required = true
}
"-w" = {
value = "$command_space_io_warning$"
set_if = {{ macro("$command_space_io_warning$") != false }}
}
"-c" = {
value = "$command_space_io_critical$"
set_if = {{ macro("$command_space_io_critical$") != false }}
}

}

arguments = {
"-t" = {
value = "$negation_timeout$"
set_if = {{ macro("$negation_timeout$") != false }}
}
"-o" = {
value = "$negation_ok_status$"
set_if = {{ macro("$negation_ok_status$") != false }}
}
"-w" = {
value = "$negation_warning_status$"
set_if = {{ macro("$negation_warning_status$") != false }}
}
"-c" = {
value = "$negation_critical_status$"
set_if = {{ macro("$negation_critical_status$") != false }}
}
"-u" = {
value = "$negation_unknown_status$"
set_if = {{ macro("$negation_unknown_status$") != false }}
}
"-s" = {
set_if = {{ macro("$negation_substitute$") != false && "$negation_substitute$" }}
}
"--command" = {
value = {{
var command = macro("$realcmd$")
var arguments = macro("$realargs$")
if (typeof(command) == String && !arguments) {
return command
}
var escaped_args = []
for (arg in resolve_arguments(command, arguments)) {
escaped_args.add(arg.replace(" ", "\\"))
}
return escaped_args.join(" ")
}}
skip_key = true
required = true
order = 99
}
}

command = ["$nagios_plugin_dir$" + "/negate"]
}
object CheckCommand "command_instance_ssh" {
vars.sshcmd = [ "$monitoring_plugin_dir$" + "/snmp/Synology/check_space_io.py"]
vars.sshargs = {
"-u" = {
value = "$command_snmp_username$"
set_if = {{ macro("$command_snmp_username$") != false }}
}
"-p" = {
value = "$command_snmp_password$"
set_if = {{ macro("$command_snmp_password$") != false }}
}
"-H" = {
value = "$command_snmp_host$"
required = true
}
"--timeout" = {
value = "$command_snmp_timeout$"
set_if = {{ macro("$command_snmp_timeout$") != false }}
}
"--version" = {
value = "$command_snmp_version$"
set_if = {{ macro("$command_snmp_version$") != false }}
}
"--community" = {
value = "$command_snmp_community$"
set_if = {{ macro("$command_snmp_community$") != false }}
}

"-v" = {
value = "$command_space_io_volume$"
required = true
}
"-w" = {
value = "$command_space_io_warning$"
set_if = {{ macro("$command_space_io_warning$") != false }}
}
"-c" = {
value = "$command_space_io_critical$"
set_if = {{ macro("$command_space_io_critical$") != false }}
}

}

command = [ "$command_overssh_nagios_plugin_dir$" + "/check_by_ssh"]
arguments = {
"-i" = "$command_overssh_identityfile$"
"-l" = "$command_overssh_user$"
"-p" = "$command_overssh_port$"
"-H" = "$command_overssh_host$"
"--timeout" = "$command_overssh_timeout$"
"-C" = {{
var command = macro("$sshcmd$")
var arguments = macro("$sshargs$")
if (typeof(command) == String && !arguments) {
return command
}
var escaped_args = []
for (arg in resolve_arguments(command, arguments)) {
escaped_args.add(escape_shell_arg(arg))
}
return escaped_args.join(" ")
}}
}

}
object CheckCommand "command_instance_ssh_negate" {
vars.realcmd = [ "$monitoring_plugin_dir$" + "/snmp/Synology/check_space_io.py"]
vars.realargs = {
"-u" = {
value = "$command_snmp_username$"
set_if = {{ macro("$command_snmp_username$") != false }}
}
"-p" = {
value = "$command_snmp_password$"
set_if = {{ macro("$command_snmp_password$") != false }}
}
"-H" = {
value = "$command_snmp_host$"
required = true
}
"--timeout" = {
value = "$command_snmp_timeout$"
set_if = {{ macro("$command_snmp_timeout$") != false }}
}
"--version" = {
value = "$command_snmp_version$"
set_if = {{ macro("$command_snmp_version$") != false }}
}
"--community" = {
value = "$command_snmp_community$"
set_if = {{ macro("$command_snmp_community$") != false }}
}

"-v" = {
value = "$command_space_io_volume$"
required = true
}
"-w" = {
value = "$command_space_io_warning$"
set_if = {{ macro("$command_space_io_warning$") != false }}
}
"-c" = {
value = "$command_space_io_critical$"
set_if = {{ macro("$command_space_io_critical$") != false }}
}

}

vars.sshargs = {
"-t" = {
value = "$negation_timeout$"
set_if = {{ macro("$negation_timeout$") != false }}
}
"-o" = {
value = "$negation_ok_status$"
set_if = {{ macro("$negation_ok_status$") != false }}
}
"-w" = {
value = "$negation_warning_status$"
set_if = {{ macro("$negation_warning_status$") != false }}
}
"-c" = {
value = "$negation_critical_status$"
set_if = {{ macro("$negation_critical_status$") != false }}
}
"-u" = {
value = "$negation_unknown_status$"
set_if = {{ macro("$negation_unknown_status$") != false }}
}
"-s" = {
set_if = {{ macro("$negation_substitute$") != false && "$negation_substitute$" }}
}
"--command" = {
value = {{
var command = macro("$realcmd$")
var arguments = macro("$realargs$")
if (typeof(command) == String && !arguments) {
return command
}
var escaped_args = []
for (arg in resolve_arguments(command, arguments)) {
escaped_args.add(arg.replace(" ", "\\"))
}
return escaped_args.join(" ")
}}
skip_key = true
required = true
order = 99
}
}

vars.sshcmd = ["$nagios_plugin_dir$" + "/negate"]
command = [ "$command_overssh_nagios_plugin_dir$" + "/check_by_ssh"]
arguments = {
"-i" = "$command_overssh_identityfile$"
"-l" = "$command_overssh_user$"
"-p" = "$command_overssh_port$"
"-H" = "$command_overssh_host$"
"--timeout" = "$command_overssh_timeout$"
"-C" = {{
var command = macro("$sshcmd$")
var arguments = macro("$sshargs$")
if (typeof(command) == String && !arguments) {
return command
}
var escaped_args = []
for (arg in resolve_arguments(command, arguments)) {
escaped_args.add(escape_shell_arg(arg))
}
return escaped_args.join(" ")
}}
}

}
/*
 *Icinga2 configuration generator
 *
 *Icinga2 configuration file generator for hosts, commands, checks, ... in python
 *
 *Copyright (c) 2020 Fabian Fröhlich <mail@icinga2.confgen.org> https://icinga2.confgen.org
 *
 *
 *This program is free software: you can redistribute it and/or modify
 *it under the terms of the GNU Affero General Public License as
 *published by the Free Software Foundation, either version 3 of the
 *License, or (at your option) any later version.
 *
 *This program is distributed in the hope that it will be useful,
 *but WITHOUT ANY WARRANTY; without even the implied warranty of
 *MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the
 *GNU Affero General Public License for more details.
 *
 *You should have received a copy of the GNU Affero General Public License
 *along with this program.If not, see <https://www.gnu.org/licenses/>.
 *
 *For all license terms see README.md and LICENSE Files in root directory of this Project.
 */



/************************************************************************************************
 **
 *! ! ! *
 * IMPORTANT NOTICE *
 *! ! ! *
 **
 **
 *DO NOT EDIT THIS FILE!*
 * This file is automatically generated with icinga2confgen python library. *
 **
 **
 * Copyright (c) 2020 Fabian Fröhlich <mail@icinga2.confgen.org>*
 * https://icinga2.confgen.org*
 **
 ************************************************************************************************/



/*



/************************************************************************************************
 **
 *! ! ! *
 * IMPORTANT NOTICE *
 *! ! ! *
 **
 **
 *THIS IS A LEGACY FILE!*
 * The usage of legacy files are only allowed for migration purposes and*
 *configurations for your own closed-source applications, as long as*
 * there is no interest from third parties for the configuration or *
 * underlining checks. If the check itself is open-source or there is an*
 * interest of third parties, then you have to publish the check command*
 * and check configuration file as python code in this repository.*
 **
 **
 * Copyright (c) 2020 Fabian Fröhlich <mail@icinga2.confgen.org>*
 * https://icinga2.confgen.org*
 **
 ************************************************************************************************/




// This is an example file, which ist placed in foo zone
// This is an example file, which ist placed in master zone
// This is an example file, which ist placed in global-templates zone